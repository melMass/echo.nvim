name: Release

on:
  push:
    branches:
      - main
    tags:
      - "v*"
    paths-ignore:
      - "**/*.md"
      - "docs/**/*"
  workflow_dispatch:
    inputs:
      name:
        description: Release tag / name ?
        required: true
        default: "latest"
        type: string

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: win32
            arch: x64
          - os: macos-latest
            platform: darwin
            arch: arm64
          - os: ubuntu-latest
            platform: linux
            arch: x64

    name: release for ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    env:
      IS_MANUAL_DISPATCH: ${{ github.event_name == 'workflow_dispatch' }}
      repo_name: ${{ github.event.repository.name }}
      RELEASE_NAME: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && github.ref_name || github.event_name == 'push' && github.ref == 'refs/heads/main' && 'canary' || github.event.inputs.name }}
    steps:
      - name: ♻️  Checking out the repository
        uses: actions/checkout@v4

      - name: 💻 Install Neovim v0.9.5
        uses: rhysd/action-setup-vim@v1
        with:
          neovim: true

      - name: 🦀 Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: 💾 Restore cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.platform }}-echo

      - uses: extractions/setup-just@v1

      - name: 🤝 Make
        shell: bash
        id: make
        run: |
          just make 

          case '${{ matrix.os }}' in
             'windows-latest')
               extension=".dll";;
             'macos-latest'|'ubuntu-latest')
               extension=".so";;
             *)
               echo "Unsupported OS"
               exit 1;;
          esac

          name="${{ matrix.platform }}_${{ matrix.arch }}-echo_native${extension}"
          zip_name="${{ env.repo_name }}-${{ matrix.platform }}_${{ matrix.arch }}-${{ env.RELEASE_NAME }}"

          just release_bin $name
          just release $zip_name

          echo "name=$name" >> $GITHUB_OUTPUT
          echo "zip_name=${zip_name}.zip" >> $GITHUB_OUTPUT
      - name: ✅ Create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RELEASE_NAME }}
          prerelease: ${{ env.RELEASE_NAME == 'canary' }}
          body: |
            ${{ env.RELEASE_NAME == 'canary' && 'This release is automatically generated from main.'|| '' }}
          files: |
            ${{ steps.make.outputs.name  }}
            ${{ steps.make.outputs.zip_name }}
