name: Release
on:
  push:
    branches:
      - main
    # tags:
    #   - "v*"
    paths:
      - "build.lua"
      - "lua/echo/init.lua"
      - "build.rs"
      - "native/**/*.rs"
      - "Cargo.lock"
  workflow_dispatch:
    inputs:
      name:
        description: Release tag / name ?
        required: true
        default: "latest"
        type: string

jobs:
  check-tags:
    permissions:
      contents: write
    name: Check tags
    runs-on: ubuntu-24.04
    env:
      IS_MANUAL_DISPATCH: ${{ github.event_name == 'workflow_dispatch' }}
      repo_name: ${{ github.event.repository.name }}
      RELEASE_NAME: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && github.ref_name || github.event_name == 'push' && github.ref == 'refs/heads/main' && 'canary' || github.event.inputs.name }}

    steps:
      - name: ‚ôªÔ∏è  Checking out the repository
        uses: actions/checkout@v4

      - name: "Delete ${{ env.RELEASE_NAME }} tag if existing"
        uses: melMass/actions@nukit
        with:
          script: |
            delete-release $env.RELEASE_NAME
        env:
          GH_TOKEN: ${{ github.token }}

  build:
    needs: [check-tags]
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: win32
            arch: x64
          - os: macos-latest
            platform: darwin
            arch: arm64
          - os: ubuntu-24.04
            platform: linux
            arch: x64

    name: release for ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    env:
      IS_MANUAL_DISPATCH: ${{ github.event_name == 'workflow_dispatch' }}
      repo_name: ${{ github.event.repository.name }}
      RELEASE_NAME: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && github.ref_name || github.event_name == 'push' && github.ref == 'refs/heads/main' && 'canary' || github.event.inputs.name }}

    steps:
      - name: ‚ôªÔ∏è  Checking out the repository
        uses: actions/checkout@v4

      - name: üíª Install Neovim Stable
        uses: rhysd/action-setup-vim@v1
        with:
          neovim: true

      - name: ü¶Ä Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: üíæ Restore cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.platform }}-echo

      - name: ü§ù Make
        id: make
        uses: melMass/actions@nukit
        with:
          script: |
            use ./toolkit.nu
            toolkit release ${{ env.RELEASE_NAME }} --ci
        env:
          GH_TOKEN: ${{ github.token }}

